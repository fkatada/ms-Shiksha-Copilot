[tool.poetry]
name = "vellm-rag-wrapper"       # Name of your package (use underscores or dashes, no spaces)
version = "1.0.0"         # Semantic version of the package
description = "A simple RAG Wrapper for easy-to-use APIs to create, update or query indexes using llama index library"
authors = ["Kavyansh Chourasia <kchourasia@microsoft.com>"]
readme = "README.md"      # Path to your README file
license = "MIT"           # License, e.g., MIT, Apache-2.0, etc.
keywords = ["llm", "rag", "llama-index", "python"]  # Search keywords for PyPI

packages = [
  { include = "rag_wrapper", from = "src" }
]

# Where you declare runtime dependencies
[tool.poetry.dependencies]
python = "~3.11"
openai = "*"
tenacity = "*"
python-dotenv = "*"
azure-identity = "*"
nest-asyncio = "*"
llama-index-core = "*"
llama-index-embeddings-azure-openai = "*"
llama-index-embeddings-openai = "*"
llama-index-instrumentation = "*"
llama-index-llms-azure-openai = "*"
llama-index-llms-openai = "*"
llama-index-vector-stores-azureaisearch = "*"
llama-index-vector-stores-qdrant = "*"
llama-index-workflows = "*"
azure-search-documents = "*"
llama-index-graph-stores-neo4j = "*"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"             # For testing
pytest-asyncio = "^0.20.2"    # For async test support
black = "^23.1"
flake8 = "^6.0"

# Build system requirements per PEP 517 / PEP 518
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.pytest.ini_options]
asyncio_mode = "auto"  # Automatically configures asyncio mode
testpaths = ["tests"]  # Directory where tests are located
log_cli = true         # Enables logging during test execution
log_level = "DEBUG"    # Sets the log level
